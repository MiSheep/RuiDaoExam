<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neuedu.ruidaoexam.dao.PaperMapper" >
  <resultMap id="BaseResultMap" type="com.neuedu.ruidaoexam.entity.Paper" >
    <id column="paper_id" property="paperId" jdbcType="INTEGER" />
    <result column="paper_name" property="paperName" jdbcType="VARCHAR" />
    <result column="paper_type" property="paperType" jdbcType="INTEGER" />
    <result column="createdByTeacherId" property="createdbyteacherid" jdbcType="INTEGER" />
    <result column="paper_time" property="paperTime" jdbcType="INTEGER" />
    <result column="total_score" property="totalScore" jdbcType="INTEGER" />
    <result column="point_price" property="pointPrice" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    paper_id, paper_name, paper_type, createdByTeacherId, paper_time, total_score, point_price
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.neuedu.ruidaoexam.entity.PaperExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from paper
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from paper
    where paper_id = #{paperId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from paper
    where paper_id = #{paperId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neuedu.ruidaoexam.entity.PaperExample" >
    delete from paper
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neuedu.ruidaoexam.entity.Paper" >
    insert into paper (paper_id, paper_name, paper_type, 
      createdByTeacherId, paper_time, total_score, 
      point_price)
    values (#{paperId,jdbcType=INTEGER}, #{paperName,jdbcType=VARCHAR}, #{paperType,jdbcType=INTEGER}, 
      #{createdbyteacherid,jdbcType=INTEGER}, #{paperTime,jdbcType=INTEGER}, #{totalScore,jdbcType=INTEGER}, 
      #{pointPrice,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neuedu.ruidaoexam.entity.Paper" >
    insert into paper
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="paperId != null" >
        paper_id,
      </if>
      <if test="paperName != null" >
        paper_name,
      </if>
      <if test="paperType != null" >
        paper_type,
      </if>
      <if test="createdbyteacherid != null" >
        createdByTeacherId,
      </if>
      <if test="paperTime != null" >
        paper_time,
      </if>
      <if test="totalScore != null" >
        total_score,
      </if>
      <if test="pointPrice != null" >
        point_price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="paperId != null" >
        #{paperId,jdbcType=INTEGER},
      </if>
      <if test="paperName != null" >
        #{paperName,jdbcType=VARCHAR},
      </if>
      <if test="paperType != null" >
        #{paperType,jdbcType=INTEGER},
      </if>
      <if test="createdbyteacherid != null" >
        #{createdbyteacherid,jdbcType=INTEGER},
      </if>
      <if test="paperTime != null" >
        #{paperTime,jdbcType=INTEGER},
      </if>
      <if test="totalScore != null" >
        #{totalScore,jdbcType=INTEGER},
      </if>
      <if test="pointPrice != null" >
        #{pointPrice,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neuedu.ruidaoexam.entity.PaperExample" resultType="java.lang.Integer" >
    select count(*) from paper
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update paper
    <set >
      <if test="record.paperId != null" >
        paper_id = #{record.paperId,jdbcType=INTEGER},
      </if>
      <if test="record.paperName != null" >
        paper_name = #{record.paperName,jdbcType=VARCHAR},
      </if>
      <if test="record.paperType != null" >
        paper_type = #{record.paperType,jdbcType=INTEGER},
      </if>
      <if test="record.createdbyteacherid != null" >
        createdByTeacherId = #{record.createdbyteacherid,jdbcType=INTEGER},
      </if>
      <if test="record.paperTime != null" >
        paper_time = #{record.paperTime,jdbcType=INTEGER},
      </if>
      <if test="record.totalScore != null" >
        total_score = #{record.totalScore,jdbcType=INTEGER},
      </if>
      <if test="record.pointPrice != null" >
        point_price = #{record.pointPrice,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update paper
    set paper_id = #{record.paperId,jdbcType=INTEGER},
      paper_name = #{record.paperName,jdbcType=VARCHAR},
      paper_type = #{record.paperType,jdbcType=INTEGER},
      createdByTeacherId = #{record.createdbyteacherid,jdbcType=INTEGER},
      paper_time = #{record.paperTime,jdbcType=INTEGER},
      total_score = #{record.totalScore,jdbcType=INTEGER},
      point_price = #{record.pointPrice,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neuedu.ruidaoexam.entity.Paper" >
    update paper
    <set >
      <if test="paperName != null" >
        paper_name = #{paperName,jdbcType=VARCHAR},
      </if>
      <if test="paperType != null" >
        paper_type = #{paperType,jdbcType=INTEGER},
      </if>
      <if test="createdbyteacherid != null" >
        createdByTeacherId = #{createdbyteacherid,jdbcType=INTEGER},
      </if>
      <if test="paperTime != null" >
        paper_time = #{paperTime,jdbcType=INTEGER},
      </if>
      <if test="totalScore != null" >
        total_score = #{totalScore,jdbcType=INTEGER},
      </if>
      <if test="pointPrice != null" >
        point_price = #{pointPrice,jdbcType=INTEGER},
      </if>
    </set>
    where paper_id = #{paperId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neuedu.ruidaoexam.entity.Paper" >
    update paper
    set paper_name = #{paperName,jdbcType=VARCHAR},
      paper_type = #{paperType,jdbcType=INTEGER},
      createdByTeacherId = #{createdbyteacherid,jdbcType=INTEGER},
      paper_time = #{paperTime,jdbcType=INTEGER},
      total_score = #{totalScore,jdbcType=INTEGER},
      point_price = #{pointPrice,jdbcType=INTEGER}
    where paper_id = #{paperId,jdbcType=INTEGER}
  </update>
  
	<insert id="addPaper" parameterType="com.neuedu.ruidaoexam.entity.Paper">
   		<selectKey order="AFTER" keyProperty="paperId" resultType="int">
   			select LAST_INSERT_ID()
   		</selectKey>
   		insert into paper (paper_name, createdByTeacherId, paper_time, total_score) values(#{paperName},#{createdbyteacherid},#{paperTime},#{totalScore})
  </insert>
</mapper>