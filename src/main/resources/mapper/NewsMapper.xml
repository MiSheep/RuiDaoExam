<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neuedu.ruidaoexam.dao.NewsMapper" >
  <resultMap id="BaseResultMap" type="com.neuedu.ruidaoexam.entity.News" >
    <id column="news_id" property="newsId" jdbcType="INTEGER" />
    <result column="receive_type_id" property="receiveTypeId" jdbcType="INTEGER" />
    <result column="receive_teacher_id" property="receiveTeacherId" jdbcType="INTEGER" />
    <result column="receive_student_id" property="receiveStudentId" jdbcType="INTEGER" />
    <result column="send_type_id" property="sendTypeId" jdbcType="INTEGER" />
    <result column="send_teacher_id" property="sendTeacherId" jdbcType="INTEGER" />
    <result column="send_student_id" property="sendStudentId" jdbcType="INTEGER" />
    <result column="send_name" property="sendName" jdbcType="VARCHAR" />
    <result column="news_type" property="newsType" jdbcType="INTEGER" />
    <result column="news_time" property="newsTime" jdbcType="TIMESTAMP" />
    <result column="news_content" property="newsContent" jdbcType="VARCHAR" />
    <result column="is_read" property="isRead" jdbcType="INTEGER" />
    <result column="reserve1" property="reserve1" jdbcType="VARCHAR" />
    <result column="reserve2" property="reserve2" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    news_id, receive_type_id, receive_teacher_id, receive_student_id, send_type_id, send_teacher_id, 
    send_student_id, send_name, news_type, news_time, news_content, is_read, reserve1, 
    reserve2
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.neuedu.ruidaoexam.entity.NewsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from news
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from news
    where news_id = #{newsId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from news
    where news_id = #{newsId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neuedu.ruidaoexam.entity.NewsExample" >
    delete from news
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neuedu.ruidaoexam.entity.News" >
    insert into news (news_id, receive_type_id, receive_teacher_id, 
      receive_student_id, send_type_id, send_teacher_id, 
      send_student_id, send_name, news_type, 
      news_time, news_content, is_read, 
      reserve1, reserve2)
    values (#{newsId,jdbcType=INTEGER}, #{receiveTypeId,jdbcType=INTEGER}, #{receiveTeacherId,jdbcType=INTEGER}, 
      #{receiveStudentId,jdbcType=INTEGER}, #{sendTypeId,jdbcType=INTEGER}, #{sendTeacherId,jdbcType=INTEGER}, 
      #{sendStudentId,jdbcType=INTEGER}, #{sendName,jdbcType=VARCHAR}, #{newsType,jdbcType=INTEGER}, 
      #{newsTime,jdbcType=TIMESTAMP}, #{newsContent,jdbcType=VARCHAR}, #{isRead,jdbcType=INTEGER}, 
      #{reserve1,jdbcType=VARCHAR}, #{reserve2,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neuedu.ruidaoexam.entity.News" >
    insert into news
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="newsId != null" >
        news_id,
      </if>
      <if test="receiveTypeId != null" >
        receive_type_id,
      </if>
      <if test="receiveTeacherId != null" >
        receive_teacher_id,
      </if>
      <if test="receiveStudentId != null" >
        receive_student_id,
      </if>
      <if test="sendTypeId != null" >
        send_type_id,
      </if>
      <if test="sendTeacherId != null" >
        send_teacher_id,
      </if>
      <if test="sendStudentId != null" >
        send_student_id,
      </if>
      <if test="sendName != null" >
        send_name,
      </if>
      <if test="newsType != null" >
        news_type,
      </if>
      <if test="newsTime != null" >
        news_time,
      </if>
      <if test="newsContent != null" >
        news_content,
      </if>
      <if test="isRead != null" >
        is_read,
      </if>
      <if test="reserve1 != null" >
        reserve1,
      </if>
      <if test="reserve2 != null" >
        reserve2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="newsId != null" >
        #{newsId,jdbcType=INTEGER},
      </if>
      <if test="receiveTypeId != null" >
        #{receiveTypeId,jdbcType=INTEGER},
      </if>
      <if test="receiveTeacherId != null" >
        #{receiveTeacherId,jdbcType=INTEGER},
      </if>
      <if test="receiveStudentId != null" >
        #{receiveStudentId,jdbcType=INTEGER},
      </if>
      <if test="sendTypeId != null" >
        #{sendTypeId,jdbcType=INTEGER},
      </if>
      <if test="sendTeacherId != null" >
        #{sendTeacherId,jdbcType=INTEGER},
      </if>
      <if test="sendStudentId != null" >
        #{sendStudentId,jdbcType=INTEGER},
      </if>
      <if test="sendName != null" >
        #{sendName,jdbcType=VARCHAR},
      </if>
      <if test="newsType != null" >
        #{newsType,jdbcType=INTEGER},
      </if>
      <if test="newsTime != null" >
        #{newsTime,jdbcType=TIMESTAMP},
      </if>
      <if test="newsContent != null" >
        #{newsContent,jdbcType=VARCHAR},
      </if>
      <if test="isRead != null" >
        #{isRead,jdbcType=INTEGER},
      </if>
      <if test="reserve1 != null" >
        #{reserve1,jdbcType=VARCHAR},
      </if>
      <if test="reserve2 != null" >
        #{reserve2,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neuedu.ruidaoexam.entity.NewsExample" resultType="java.lang.Integer" >
    select count(*) from news
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update news
    <set >
      <if test="record.newsId != null" >
        news_id = #{record.newsId,jdbcType=INTEGER},
      </if>
      <if test="record.receiveTypeId != null" >
        receive_type_id = #{record.receiveTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.receiveTeacherId != null" >
        receive_teacher_id = #{record.receiveTeacherId,jdbcType=INTEGER},
      </if>
      <if test="record.receiveStudentId != null" >
        receive_student_id = #{record.receiveStudentId,jdbcType=INTEGER},
      </if>
      <if test="record.sendTypeId != null" >
        send_type_id = #{record.sendTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.sendTeacherId != null" >
        send_teacher_id = #{record.sendTeacherId,jdbcType=INTEGER},
      </if>
      <if test="record.sendStudentId != null" >
        send_student_id = #{record.sendStudentId,jdbcType=INTEGER},
      </if>
      <if test="record.sendName != null" >
        send_name = #{record.sendName,jdbcType=VARCHAR},
      </if>
      <if test="record.newsType != null" >
        news_type = #{record.newsType,jdbcType=INTEGER},
      </if>
      <if test="record.newsTime != null" >
        news_time = #{record.newsTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.newsContent != null" >
        news_content = #{record.newsContent,jdbcType=VARCHAR},
      </if>
      <if test="record.isRead != null" >
        is_read = #{record.isRead,jdbcType=INTEGER},
      </if>
      <if test="record.reserve1 != null" >
        reserve1 = #{record.reserve1,jdbcType=VARCHAR},
      </if>
      <if test="record.reserve2 != null" >
        reserve2 = #{record.reserve2,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update news
    set news_id = #{record.newsId,jdbcType=INTEGER},
      receive_type_id = #{record.receiveTypeId,jdbcType=INTEGER},
      receive_teacher_id = #{record.receiveTeacherId,jdbcType=INTEGER},
      receive_student_id = #{record.receiveStudentId,jdbcType=INTEGER},
      send_type_id = #{record.sendTypeId,jdbcType=INTEGER},
      send_teacher_id = #{record.sendTeacherId,jdbcType=INTEGER},
      send_student_id = #{record.sendStudentId,jdbcType=INTEGER},
      send_name = #{record.sendName,jdbcType=VARCHAR},
      news_type = #{record.newsType,jdbcType=INTEGER},
      news_time = #{record.newsTime,jdbcType=TIMESTAMP},
      news_content = #{record.newsContent,jdbcType=VARCHAR},
      is_read = #{record.isRead,jdbcType=INTEGER},
      reserve1 = #{record.reserve1,jdbcType=VARCHAR},
      reserve2 = #{record.reserve2,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neuedu.ruidaoexam.entity.News" >
    update news
    <set >
      <if test="receiveTypeId != null" >
        receive_type_id = #{receiveTypeId,jdbcType=INTEGER},
      </if>
      <if test="receiveTeacherId != null" >
        receive_teacher_id = #{receiveTeacherId,jdbcType=INTEGER},
      </if>
      <if test="receiveStudentId != null" >
        receive_student_id = #{receiveStudentId,jdbcType=INTEGER},
      </if>
      <if test="sendTypeId != null" >
        send_type_id = #{sendTypeId,jdbcType=INTEGER},
      </if>
      <if test="sendTeacherId != null" >
        send_teacher_id = #{sendTeacherId,jdbcType=INTEGER},
      </if>
      <if test="sendStudentId != null" >
        send_student_id = #{sendStudentId,jdbcType=INTEGER},
      </if>
      <if test="sendName != null" >
        send_name = #{sendName,jdbcType=VARCHAR},
      </if>
      <if test="newsType != null" >
        news_type = #{newsType,jdbcType=INTEGER},
      </if>
      <if test="newsTime != null" >
        news_time = #{newsTime,jdbcType=TIMESTAMP},
      </if>
      <if test="newsContent != null" >
        news_content = #{newsContent,jdbcType=VARCHAR},
      </if>
      <if test="isRead != null" >
        is_read = #{isRead,jdbcType=INTEGER},
      </if>
      <if test="reserve1 != null" >
        reserve1 = #{reserve1,jdbcType=VARCHAR},
      </if>
      <if test="reserve2 != null" >
        reserve2 = #{reserve2,jdbcType=INTEGER},
      </if>
    </set>
    where news_id = #{newsId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neuedu.ruidaoexam.entity.News" >
    update news
    set receive_type_id = #{receiveTypeId,jdbcType=INTEGER},
      receive_teacher_id = #{receiveTeacherId,jdbcType=INTEGER},
      receive_student_id = #{receiveStudentId,jdbcType=INTEGER},
      send_type_id = #{sendTypeId,jdbcType=INTEGER},
      send_teacher_id = #{sendTeacherId,jdbcType=INTEGER},
      send_student_id = #{sendStudentId,jdbcType=INTEGER},
      send_name = #{sendName,jdbcType=VARCHAR},
      news_type = #{newsType,jdbcType=INTEGER},
      news_time = #{newsTime,jdbcType=TIMESTAMP},
      news_content = #{newsContent,jdbcType=VARCHAR},
      is_read = #{isRead,jdbcType=INTEGER},
      reserve1 = #{reserve1,jdbcType=VARCHAR},
      reserve2 = #{reserve2,jdbcType=INTEGER}
    where news_id = #{newsId,jdbcType=INTEGER}
  </update>
  <select id="countStudentReceiveNews" resultType="java.lang.Integer">
  	select count(*) from news
  	where receive_student_id = #{receive_student_id} and is_read = 0
  </select>
  <select id="countTeacherReceiveNews" resultType="java.lang.Integer">
  	select count(*) from news
  	where receive_teacher_id = #{receive_teacher_id} and is_read = 0
  </select>
  <select id="getAllTeacherNews" resultMap="BaseResultMap">
  	select * from news
  	where receive_teacher_id = #{receive_teacher_id} order by news_id desc
  </select>
  <select id="getAllStudentNews" resultMap="BaseResultMap">
  	select * from news
  	where receive_student_id = #{receive_student_id} order by news_id desc
  </select>
  <update id = "updateIsReadByTeacher_id">
   	update news
   	set is_read = 1
   	where receive_teacher_id = #{receive_teacher_id}
  </update>
  <update id = "updateIsReadByStudent_id">
   	update news
   	set is_read = 1
   	where receive_student_id = #{receive_student_id}
  </update>
</mapper>