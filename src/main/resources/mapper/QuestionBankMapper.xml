<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neuedu.ruidaoexam.dao.QuestionBankMapper" >
  <resultMap id="BaseResultMap" type="com.neuedu.ruidaoexam.entity.QuestionBank" >
    <id column="ques_bank_id" property="quesBankId" jdbcType="INTEGER" />
    <result column="ques_bank_name" property="quesBankName" jdbcType="VARCHAR" />
    <result column="ques_bank_filed" property="quesBankFiled" jdbcType="INTEGER" />
    <result column="createdByTeacherId" property="createdbyteacherid" jdbcType="INTEGER" />
    <result column="point_price" property="pointPrice" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ques_bank_id, ques_bank_name, ques_bank_filed, createdByTeacherId, point_price
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.neuedu.ruidaoexam.entity.QuestionBankExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from question_bank
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from question_bank
    where ques_bank_id = #{quesBankId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from question_bank
    where ques_bank_id = #{quesBankId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neuedu.ruidaoexam.entity.QuestionBankExample" >
    delete from question_bank
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neuedu.ruidaoexam.entity.QuestionBank" >
    insert into question_bank (ques_bank_id, ques_bank_name, ques_bank_filed, 
      createdByTeacherId, point_price)
    values (#{quesBankId,jdbcType=INTEGER}, #{quesBankName,jdbcType=VARCHAR}, #{quesBankFiled,jdbcType=INTEGER}, 
      #{createdbyteacherid,jdbcType=INTEGER}, #{pointPrice,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neuedu.ruidaoexam.entity.QuestionBank" >
    insert into question_bank
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="quesBankId != null" >
        ques_bank_id,
      </if>
      <if test="quesBankName != null" >
        ques_bank_name,
      </if>
      <if test="quesBankFiled != null" >
        ques_bank_filed,
      </if>
      <if test="createdbyteacherid != null" >
        createdByTeacherId,
      </if>
      <if test="pointPrice != null" >
        point_price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="quesBankId != null" >
        #{quesBankId,jdbcType=INTEGER},
      </if>
      <if test="quesBankName != null" >
        #{quesBankName,jdbcType=VARCHAR},
      </if>
      <if test="quesBankFiled != null" >
        #{quesBankFiled,jdbcType=INTEGER},
      </if>
      <if test="createdbyteacherid != null" >
        #{createdbyteacherid,jdbcType=INTEGER},
      </if>
      <if test="pointPrice != null" >
        #{pointPrice,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neuedu.ruidaoexam.entity.QuestionBankExample" resultType="java.lang.Integer" >
    select count(*) from question_bank
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update question_bank
    <set >
      <if test="record.quesBankId != null" >
        ques_bank_id = #{record.quesBankId,jdbcType=INTEGER},
      </if>
      <if test="record.quesBankName != null" >
        ques_bank_name = #{record.quesBankName,jdbcType=VARCHAR},
      </if>
      <if test="record.quesBankFiled != null" >
        ques_bank_filed = #{record.quesBankFiled,jdbcType=INTEGER},
      </if>
      <if test="record.createdbyteacherid != null" >
        createdByTeacherId = #{record.createdbyteacherid,jdbcType=INTEGER},
      </if>
      <if test="record.pointPrice != null" >
        point_price = #{record.pointPrice,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update question_bank
    set ques_bank_id = #{record.quesBankId,jdbcType=INTEGER},
      ques_bank_name = #{record.quesBankName,jdbcType=VARCHAR},
      ques_bank_filed = #{record.quesBankFiled,jdbcType=INTEGER},
      createdByTeacherId = #{record.createdbyteacherid,jdbcType=INTEGER},
      point_price = #{record.pointPrice,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neuedu.ruidaoexam.entity.QuestionBank" >
    update question_bank
    <set >
      <if test="quesBankName != null" >
        ques_bank_name = #{quesBankName,jdbcType=VARCHAR},
      </if>
      <if test="quesBankFiled != null" >
        ques_bank_filed = #{quesBankFiled,jdbcType=INTEGER},
      </if>
      <if test="createdbyteacherid != null" >
        createdByTeacherId = #{createdbyteacherid,jdbcType=INTEGER},
      </if>
      <if test="pointPrice != null" >
        point_price = #{pointPrice,jdbcType=INTEGER},
      </if>
    </set>
    where ques_bank_id = #{quesBankId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neuedu.ruidaoexam.entity.QuestionBank" >
    update question_bank
    set ques_bank_name = #{quesBankName,jdbcType=VARCHAR},
      ques_bank_filed = #{quesBankFiled,jdbcType=INTEGER},
      createdByTeacherId = #{createdbyteacherid,jdbcType=INTEGER},
      point_price = #{pointPrice,jdbcType=INTEGER}
    where ques_bank_id = #{quesBankId,jdbcType=INTEGER}
  </update>
  <update id="cancelSellBank">
  UPDATE question_bank SET point_price=0 WHERE createdByTeacherId=#{teacherid} and ques_bank_id=#{bankid};
  </update>
  <update id="sellBank">
    UPDATE question_bank SET point_price=#{price} WHERE createdByTeacherId=#{teacherid} and ques_bank_id=#{bankid};
  
  </update>
  <insert id="addBank" parameterType="com.neuedu.ruidaoexam.entity.QuestionBank">
  <selectKey order="AFTER" keyProperty="quesBankId" resultType="int">
   			select LAST_INSERT_ID()
   		</selectKey>
   		insert into question_bank (ques_bank_name, ques_bank_filed, createdByTeacherId, point_price) values(#{quesBankName},#{quesBankFiled},#{createdbyteacherid},#{pointPrice})
  
  </insert>
</mapper>